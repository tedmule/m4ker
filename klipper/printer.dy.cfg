# 大鱼TT，小政K6主板，行程150mm*150mm*170mm

[mcu]
#baud: 250000 #主板通信波特率，一般不需要改动
serial:/dev/serial/by-id/usb-Klipper_stm32f103xe_lyz-if00  #上位机和下位机通讯的接口，配置正确才能连接上打印机

restart_method: command

[pause_resume]

[display_status]

[input_shaper]                         #共振补偿
shaper_type_x = 2hump_ei               #定义 X 的输入整形器类型
shaper_freq_x = 68.0                   #输入整形器的 X 轴频率(Hz)
shaper_type_y = zv                     #定义 Y 的输入整形器类型
shaper_freq_y = 55.6                   #输入整形器的 Y 轴频率(Hz)

[virtual_sdcard]
path: /home/user/printer_data/gcodes   #虚拟SD卡，如果主机的速度不足以很好地运行 OctoPrint，虚拟 SD 卡可能有帮助

[printer]
kinematics: corexy		               	# corexy结构，普通结构（笛卡尔坐标系）填cartesian
max_z_velocity: 5			                # z轴限制最大速度
max_z_accel: 200				              # z轴限制最大加速度
max_velocity: 600			                # xy最大速度
max_accel: 30000			                # xy最大加速度

[stepper_x]
step_pin: PB3                         # step端口
dir_pin: !PA15                        # 电机运动方向定义，如果发现方向相反在前加！，例如本来是PA1发现反向那就改成!PA1
enable_pin: !PA9                      # 信号端口
microsteps: 16                        # 细分
rotation_distance: 40                 # 主动轮周长mm（2GT-20齿同步轮=40，2GT-16齿同步轮=32）
full_steps_per_rotation: 200          # 步进电机转一圈需要的步数（1.8度电机:360/1.8=200，0.9度电机:360/0.9=400）
position_min: 0                       # 行程最小位置的坐标
position_max: 148                     # 行程最大位置的坐标
position_endstop: 148                 # 限位开关触发位置的坐标
homing_speed: 40                      # 归零速度
homing_retract_dist: 5                # 第一次回原点后，后退的距离 
second_homing_speed: 3                # 第二次回原点的速度
#homing_positive_dir: true            # 复位方向（一般不需要改动）
endstop_pin: PB13                     # 限位开关PIN（X+）

[stepper_y]
step_pin: PB7                         # step端口 
dir_pin: !PB6	                        # 电机运动方向定义，如果发现方向相反在前加！，例如本来是PA1发现反向那就改成!PA1
enable_pin: !PA9                      # en端口
microsteps: 16                        # 细分
rotation_distance: 40                 # 主动轮周长mm（2GT-20齿同步轮=40，2GT-16齿同步轮=32）
full_steps_per_rotation: 200          # 步进电机转一圈需要的步数（1.8度电机:360/1.8=200，0.9度电机:360/0.9=400）
position_min: 0                       # 行程最小位置的坐标
position_max: 148                     # 行程最大位置的坐标
position_endstop: 148                 # 限位开关触发位置的坐标
homing_speed: 40                      # 复位速度
homing_retract_dist: 5                # 第一次回原点后，后退的距离 
second_homing_speed: 3                # 第二次回原点的速度
endstop_pin: PC14                     # 限位PIN（Y+）



[stepper_z]
step_pin: PA13				                #step端口
dir_pin: PA10			                  	#电机运动方向定义，如果发现方向相反在前加！，例如本来是PA1发现反向那就改成!PA1
enable_pin: !PA9		                  #电机使能引脚，如果发现，未归位电机锁死，操作电机时不转并且此时电机没有锁死，在前面加！
rotation_distance: 8	                #电机旋转一圈Z轴移动的距离，例如T8丝杆的导程是8mm，即丝杆转一圈螺母移动8mm
microsteps: 16			            	    #步进电机使用的细分数
full_steps_per_rotation: 200          #电机旋转一圈需要的步数，例如1.8度电机为360/1.8=200
endstop_pin: PC13			                #引脚触发限位
position_min: -1			                #Z轴可移动的最小值
position_max: 150			                #Z轴可移动的最大值
homing_speed: 3			            	    #Z轴回零速度
homing_retract_dist: 5	              #第一次碰到限位回缩距离
homing_retract_speed: 3		            #第一次碰到限位回缩时候的速度
second_homing_speed: 1		            #第二次去触发限位时候的速度

[extruder]
step_pin: PB15                        #STEP端口定义
dir_pin: !PB14                        #电机运动方向定义，如果发现方向相反在前加！，例如本来是PA1发现反向那就改成!PA1
enable_pin: !PA9                      #电机使能引脚，如果发现未归位电机锁死，操作电机时不转并且此时电机没有锁死，在前面加！
microsteps: 16					              #驱动细分数
rotation_distance: 21.838			        #挤出机旋转一圈挤出的长度
gear_ratio: 50:10					            #挤出机齿轮减速比
nozzle_diameter: 0.400		 		        #喷嘴直径
filament_diameter: 1.750			        #耗材直径
max_extrude_only_distance: 250.0      #最大挤出距离限制（根据需要调整）
heater_pin: PB10					            #加热引脚
max_power: 1.0					              #加热头的最大功率，如果你的电源额定功率非常低，那可以用0.3或0.5，但是会加热的慢
sensor_type: Generic 3950		          #温度传感器的类型
sensor_pin: PA3					              #传感器引脚
pullup_resistor: 4700				          #与热敏接入电路中的上拉电阻
#smooth_time: 1						            #使用多久时间内测得多组数据的平均温度当温度值
#control: pid						              #温控算法PID
		#以下是pid控温系数
#pid_kp = 39.282
#pid_ki = 2.476
#pid_kd = 112.803	                    #pid结束
min_extrude_temp: 170				          #挤出机能挤出的最小温度
min_temp: -273						            #打印机能运作的最低温度，调试时候可以给-273，正常使用不建议低于-10度
max_temp: 320						              #挤出加热棒的最大温度，超过此温度将紧急停机

[heater_bed]                          #热床
heater_pin: PB2							          #加热引脚
max_power: 1						   	          #加热头的最大功率，如果你的电源额定功率非常低，那可以用0.3或0.5，但是会加热的慢
sensor_type: Generic 3950		          #温度传感器的类型
sensor_pin: PA1							          #ADC引脚
pullup_resistor: 4700					        #与热敏接入电路中的上拉电阻
min_temp: -273						            #打印机能运作的最低温度，调试时候可以给-273，正常使用不建议低于-10度
max_temp: 120                         #最大温度，超过此温度将紧急停机
control: pid                     
pid_kp = 62.922
pid_ki = 0.539
pid_kd = 1835.747		

#####################################################################
#   TMC2209 驱动配置   没有静音驱动 要全部注释掉
#####################################################################
[tmc2209 stepper_x]
uart_pin: PB8               #RX
uart_address: 0             #对应地址
interpolate: True           #开启插值=256细分
run_current: 1.2            #电机电流
hold_current: 0.500         #电机静态力矩保持电流值
sense_resistor: 0.110       #驱动采样电阻值（不要修改）
#stealthchop_threshold: 99999

[tmc2209 stepper_y]
uart_pin: PB4               #RX
uart_address: 0             #对应地址
interpolate: True           #开启插值=256细分
run_current: 1.2            #电机电流
hold_current: 0.500         #电机静态力矩保持电流值
sense_resistor: 0.110       #驱动采样电阻值（不要修改）
#stealthchop_threshold: 99999

[tmc2208 extruder]
uart_pin: PA8               #RX
uart_address: 0             #对应地址
interpolate: True
run_current: 0.8
hold_current: 0.500
sense_resistor: 0.110
#stealthchop_threshold: 99999

[tmc2208 stepper_z]
uart_pin: PA14               #RX
uart_address: 0              #对应地址
interpolate: False
run_current: 0.800
hold_current: 0.400
sense_resistor: 0.110
stealthchop_threshold: 99999

[bed_screws]
screw1: 20, 20
screw2: 130, 20
screw3: 20, 130
screw4: 130, 130

[temperature_sensor MCU]
sensor_type: temperature_mcu
sensor_mcu: mcu
min_temp: 0                            #最小温度
max_temp: 100                          #最大温度

#[display_status]
[temperature_sensor 红米2]              #pi的温度显示
sensor_type: temperature_host
min_temp: 0                            #温度小
max_temp: 100                          #温度大

[controller_fan my_controller_fan]     #主板散热风扇
pin:PB1                                #定义引脚
max_power:1                            #最大功率
idle_timeout:10                        #空闲时间

#喉管风扇
[heater_fan 喉管风扇]                   #喉管散热风扇
pin:PB12                               #Pin脚定义
max_power:1                            #最大功率
heater: extruder                       #由加热棒触发
heater_temp: 50.0                      #触发温度50度
fan_speed: 1                           #风扇速度

[fan_generic fan0]                     #模型散热风扇
pin: PB11                              #定义引脚
cycle_time: 0.01                       #风扇控制周期
hardware_pwm: false                    #是否开启PWM控制

[fan_generic fan2]                     #辅助散热风扇
pin: PB0                               #定义引脚
cycle_time: 0.01                       #风扇控制周期
hardware_pwm: false                    #是否开启PWM控制

[gcode_macro M106]                     #重写风扇定义，添加辅助散热风扇后需要
gcode:
    {% set fan = 'fan' + (params.P|int if params.P is defined else 0)|string %}
    {% set speed = (params.S|float / 255 if params.S is defined else 1.0) %}
    SET_FAN_SPEED FAN={fan} SPEED={speed}

[gcode_macro LOAD_FILAMENT]
gcode:
  {% set TEMP = params.TEMP|default(210)|int %}        # 默认挤出温度（可通过 TEMP= 参数修改）
  {% set SPEED = params.SPEED|default(5)|int %}        # 装载速度（mm/s）
  {% set LENGTH = params.LENGTH|default(100)|int %}    # 装载长度（mm）
  
  # 准备工作区
  G91                          #相对坐标模式
  G1 Z5 F300                   #抬升喷头，避免碰撞
  G90                          #绝对坐标模式
  
  # 加热喷头并等待温度稳定
  M104 S{TEMP}                 #设置喷头温度
  M109 S{TEMP}                 #等待温度达到设定值
  M117 Loading filament...     #显示状态信息到屏幕
  
  # 预挤出少量耗材，清除喷嘴杂质
  G91                           #相对坐标模式
  #G1 E-2 F300                  #回抽2mm，防止堵塞
  G1 E5                         #挤出5mm，低速预热
  G1 E-2 F300                   #回抽2mm
  
  # 主装载过程
  G1 E{LENGTH}                  #装载指定长度的耗材
  G1 E-5 F300                   #回抽5mm，减少滴漏
  G90                           #回到绝对坐标模式
  M104 S0                       #关闭加热
  M117 Filament loaded!         #显示完成信息

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set TEMP = params.TEMP|default(210)|int %}        # 默认挤出温度（可通过 TEMP= 参数修改）
  {% set SPEED = params.SPEED|default(5)|int %}        # 退回速度（mm/s）
  {% set LENGTH = params.LENGTH|default(100)|int %}    # 退回长度（mm）
  
  # 准备工作
  G91                          #相对坐标模式
  G1 Z5 F300                   #抬升喷头
  G90                          #绝对坐标模式
  
  # 加热喷头并等待温度稳定
    M104 S{TEMP}
    M109 S{TEMP}
  M117 Unloading filament...
  
  # 退回耗材
  G91                          #相对坐标模式
  G1 E25 F300                  #预挤出15mm
  G1 E-{LENGTH}                #高速退回指定长度
  G90                          #回到绝对坐标模式
  M104 S0                      #关闭加热
  M117 Filament unloaded!      #显示完成信息

[force_move]
enable_force_move: true

[delayed_gcode KINEMATIC_POSITION]
initial_duration:0.2
gcode:
  SET_KINEMATIC_POSITION

[exclude_object]

[gcode_arcs]
resolution: 0.1

[verify_heater heater_bed]
max_error: 120
check_gain_time:5000

[input_shaper]                  #共振补偿
shaper_type_x = 2hump_ei        #定义 X 的输入整形器类型
shaper_freq_x = 68.0            #输入整形器的 X 轴频率(Hz)
shaper_type_y = zv              #定义 Y 的输入整形器类型
shaper_freq_y = 55.6            #输入整形器的 Y 轴频率(Hz)

[input_shaper]
shaper_type_x = mzv
shaper_freq_x = 43.0
shaper_type_y = mzv
shaper_freq_y = 43.2

[gcode_macro CANCEL_PRINT]             #取消打印
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  G1 X10 F3000
  M84
  M106 S0

#####################################################################
#                           打完关机（需要时启用）
#####################################################################
#使用本脚本后，在"Klipper首页-自定义宏"处出现"DWGJ_ON"与"DWGJ_OFF"
#打印前或者打印中点击 "DWGJ_ON"即开启，"DWGJ_OFF"即关闭
[gcode_macro DWGJ_ON]       # 使能打完关机
variable_dwgj_on: 0
gcode:
    SET_GCODE_VARIABLE MACRO=DWGJ_ON VARIABLE=dwgj_on VALUE=1
    {action_respond_info("DWGJ-ON-ON-ON!")}
#    # 需要使用打完关机时只需点击Klipper首页的 "DWGJ_ON"按钮即开启打完关机
##--------------------------------------------------------------------
[gcode_macro DWGJ_OFF]      # 关闭打完关机
gcode:
    SET_GCODE_VARIABLE MACRO=DWGJ_ON VARIABLE=dwgj_on VALUE=0
    {action_respond_info("DWGJ-OFF-OFF-OFF!")}
#    # 不需要使用打完关机时只需点击Klipper首页的 "DWGJ_OFF"按钮即关闭打完关机
##--------------------------------------------------------------------
[gcode_macro M81]           # M81指令触发的同时打完关机变量使能才会执行关机
gcode:
    {% set is_shutdown = printer["gcode_macro DWGJ_ON"].dwgj_on|int %}
    {% if is_shutdown == 1 %}
        SHUT_DOWN
    {% else %}
#    # 若为触发则暂时什么都不做
    {% endif %}
##--------------------------------------------------------------------
[gcode_macro SHUT_DOWN]      # 设置 SHUT_DOWN 为关机宏
gcode:
    SET_GCODE_VARIABLE MACRO=DWGJ_ON VARIABLE=dwgj_on VALUE=0 #使能打完关机
     {action_emergency_stop("Ready to shut down!!!")}         #执行软件层面关机
    UPDATE_DELAYED_GCODE ID=Delayed_SHUT_DOWN DURATION=3      #执行切断电源
##--------------------------------------------------------------------
[delayed_gcode Delayed_SHUT_DOWN]     # 设置延迟关机宏
gcode:
   set_pin pin=power value=0.0        # 延迟关机
##--------------------------------------------------------------------
[delayed_gcode powerOFF]              # 设置延迟执行M81宏
gcode:
    M81 value=0.0                     # 延迟执行M81

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 31.420
#*# pid_ki = 11.637
#*# pid_kd = 21.208
#*#
#*# [heater_bed]
#*#
#*# [stepper_z]
#*# position_endstop = 1.00
